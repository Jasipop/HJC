@startuml

!include common.puml
'!include user_management.puml


package "Basic Functions" {
'    class Nutllet {
'        -userId: String
'        -balance: double
'        +getBalance(): double
'        +addTransaction(transaction: Transaction): void
'        +getTransactionHistory(): List<Transaction>
'    }
'    class Discover {
'        -recommendations: List<Recommendation>
'        +getPersonalizedOffers(): List<Offer>
'        +searchDeals(criteria: SearchCriteria): List<Deal>
'    }



    class NutlletEnterprise {
        -companyId: String
        -companyName: String
        -employees: List<Employee>
        +manageEmployees(): void
        +generateFinancialReport(): Report
    }

    class FinancialAnalysis {
        -transactions: List<Transaction>
        +calculateMonthlySpending(): Map<Month, Double>
        +generateSpendingReport(): Report
        +getCategoryBreakdown(): Map<Category, Double>
    }

    class EP_FinancialAnalysis {
        -enterpriseData: EnterpriseData
        +analyzeCompanyPerformance(): PerformanceReport
        +generateQuarterlyReport(): Report
        +getEmployeeExpenseAnalysis(): ExpenseReport
    }


    class FinancialAnalysis {
        -transactions: List<Transaction>
        +calculateMonthlySpending(): Map<Month, Double>
        +generateSpendingReport(): Report
        +getCategoryBreakdown(): Map<Category, Double>
    }

    class EP_FinancialAnalysis {
        -enterpriseData: EnterpriseData
        +analyzeCompanyPerformance(): PerformanceReport
        +generateQuarterlyReport(): Report
        +getEmployeeExpenseAnalysis(): ExpenseReport
    }


    class Login {
        -username: String
        -password: String
        +authenticate(): boolean
        +validateCredentials(): boolean
        +logout(): void
    }

    class LoginSignUp {
        +validateEmail(email: String): boolean
        +createNewAccount(userData: UserData): void
        +sendVerificationEmail(): void
    }

    class LoginPassword {
        +resetPassword(): void
        +validatePasswordStrength(): boolean
        +updatePassword(newPassword: String): void
    }

    class Settings {
        -preferences: Map<String, Object>
        +updatePreference(key: String, value: Object): void
        +getUserPreferences(): Map<String, Object>
        +resetToDefaults(): void
    }
}

' 关系定义
Nutllet --> NutlletEnterprise
Nutllet --> FinancialAnalysis
NutlletEnterprise --> EP_FinancialAnalysis
Nutllet -->Login
Settings --> LoginSignUp
Settings --> LoginPassword
Login --> Settings
@enduml